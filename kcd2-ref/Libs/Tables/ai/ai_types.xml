<?xml version="1.0" encoding="utf-8"?>
<database>
<Types version="1">

	<!-- Common base types -->
	<!-- =========================================================================== -->

	<!-- Player to player link -->
	<!-- =========================================================================== -->

	<Type Name="dudeProx">
		<Type Name="timestamps">
			<Member Name="lastBarkTimestamp" Type="int64" />
			<Member Name="cooldownPriority" Type="int" />
		</Type>
	</Type>

	<!-- Combat -->
	<!-- =========================================================================== -->

	<Type Name="combat">

		<Type Name="playerAttackNearMiss">

			<Member Name="attacker" Type="wuid" />

		</Type>

		<Type Name="stopFightData">
			<Member Name="particpantsCount" Type="int" />
			<Member Name="lockName" Type="string" />
		</Type>

		<Type Name="combatChatFeedback">
			<Member Name="action" Type="enum:combat_combatChatResult" />
		</Type>

		<Type Name="playerLeftSurrenderingNPC">
			<Member Name="left" Type="bool" />
		</Type>

		<Type Name="openworldSurrender" />

		<Type Name="duel">
			<Type Name="combatEvent">
				<Member Name="opponentFlee" Type="bool" />
				<Member Name="opponentSurrender" Type="bool" />
				<Member Name="playerFlee" Type="bool" />
				<Member Name="playerSurrender" Type="bool" />
			</Type>
		</Type>

		<Type Name="assaultVolumeData">
			<Member Name="attacker" Type="wuid" />
			<Member Name="victim" Type="wuid" />
			<Member Name="kind" Type="enum:combatAttackKind" />
			<Member Name="victimKind" Type="enum:assaultVictimKind" />
		</Type>

		<Type Name="lastHitByPlayer">
			<Member Name="kind" Type="enum:combatAttackKind" />
			<Member Name="time" Type="int64" />
		</Type>

		<Type Name="recentlySkirmished">
			<Member Name="time" Type="int64" />
		</Type>

		<Type Name="questFightStatus">
			<Member Name="status" Type="enum:combat_questFightStatus" />
			<Member Name="timestamp" Type="int64" />
		</Type>

		<Type Name="temporaryFriendsAfterSurrender">
			<Member Name="friendSince" Type="int64" />
		</Type>

	</Type>

	<!-- Open World Cooldowns -->
	<!-- =========================================================================== -->

	<Type Name="openWorld">
		<Type Name="cooldownEvent">
			<Member Name="eventType" Type="enum:openWorld_cooldownEventType" />
			<Member Name="crimeReactionPriority" Type="int" />
		</Type>
	</Type>

	<!-- Crime -->
	<!-- =========================================================================== -->

	<Type Name="crime">

		<Type Name="extraGuardsData">	<!-- Data on link from concept -->
			<Member Name="faction" Type="string" />
			<Member Name="location" Type="enum:extraGuards_location" />
		</Type>

		<Type Name="barkRequest">
			<Member Name="metarole" Type="string" />
			<Member Name="isDramaticBark" Type="bool" InitialValue="false" />
			<Member Name="canBeDelayed" Type="bool" />
			<Member Name="priority" Type="enum:crime_barkPriority" InitialValue="0" />
			<Member Name="lookAtId" Type="wuid" />
			<Member Name="contextAsText" Type="string" InitialValue="" />
			<Member Name="animationApproach" Type="enum:animationApproach" InitialValue="$enum:animationApproach.dontPlayDialogAnimations" />
		</Type>

		<Type Name="playersLastSeenPositionShare" >
			<Member Name="receiver" Type="wuid" />
		</Type>

		<Type Name="despawnVolumeRequest" >
			<Member Name="volume" Type="wuid" />
			<Member Name="timestamp" Type="int64" />
		</Type>

		<Type Name="theftVolumeSeenDuringCheckHomeStashesNotification" >
			<Member Name="attributed" Type="bool" />
			<Member Name="information" Type="information" />
			<Member Name="pos" Type="vec3" />
		</Type>

		<Type Name="preUnconsciousnessLastHit" > <!-- used when unconscious NPC wakes up to check if it knows if/how player KOd him -->
			<Member Name="attackKind" Type="enum:crime_attackKind" />
			<Member Name="resolved" Type="bool" />
		</Type>

		<Type name="hearingSubscription">
			<Member Name="event" Type="enum:crime_hearingSubscription" />
			<Member Name="hearingInfo" Type="hearingInfo" />
		</Type>

		<Type name="hearingSubscriptionNotification">
			<Member Name="type" Type="enum:crime_hearingSubscriptionNotificationType" />
		</Type>

		<Type Name="lookAroundUpdateSoundPosition">
			<Member Name="hearingInfo" Type="hearingInfo" />
		</Type>

		<Type Name="lookAroundUpdateScanPosition">
			<Member Name="scanDirection" Type="vec3" />
		</Type>

		<Type Name="checkPebbleDistraction">
			<Member Name="pos" Type="vec3" />
		</Type>

		<Type Name="demotivation" />	<!-- destroys all motivations -->

		<Type Name="anchor"> <!-- Anchoring reactive behaviours - KCD2-27463 -->
			<Member Name="position" Type="vec3" />
			<Member Name="timestamp" Type="int64" />
		</Type>
		
		<Type Name="delayedTrespass">
			<Member Name="area" Type="wuid" />
			<Member Name="trespassLevel" Type="enum:trespassLevel" />
			<Member Name="timestamp" Type="int64" />
		</Type>

		<Type Name="checkMatesRequest">
			<Member Name="deadMate" Type="wuid"></Member>
		</Type>

		<Type Name="horseMountedData">
			<Member Name="initialPosition" Type="vec3" />
			<Member Name="timestamp" Type="int64" />
		</Type>
        
		<Type name="dramaticBark">
			<Member Name="pos" Type="vec3" />
			<Member Name="time" Type="int64" />
		</Type>

		<Type Name="unconsciousPlayerData">
			<Member Name="moneyStolen" Type="bool" />
			<Member Name="bootsStolen" Type="bool" />
			<Member Name="teleportedOutOfTrespass" Type="bool" />
		</Type>

		<Type name="globalCooldowns">
			<Member name="lastNoTorchGuardTimestamp" type="int64" />
			<Member name="lastDrawnWeaponGuardTimestamp" type="int64" />
			<Member name="lastForbiddenEquipmentGuardTimestamp" type="int64" />
			<Member name="lastFriskTimestamp" type="int64" />
			<Member name="lastFriskChanceTimestamp" type="int64" />
			<Member name="lastSmellBarkTimestamp" type="int64" />
			<Member name="robWhileUnconsciousTimestamp" type="int64" />
			<Member name="robWhileUnconsciousChanceTimestamp" type="int64" />
			<Member name="horseCombatRepositionAudioTriggerTimestmap" type="int64" />
			<!-- to be deleted -->
			<Member name="barkCooldownPriority" type="int" />
			<Member name="lastBarkTimestamp" type="int64" />
		</Type>

		<Type Name="globalCooldown" >
			<Type Name="barkReaction" >
				<Member Name="reactionKind" Type="enum:crime_barkReactionKind" />
				<Member Name="timestamp" Type="int64" />
			</Type>
		</Type>

		<Type Name="friskCooldownRequest" />

		<Type name="npcCooldown">
			<Type name="resolve">
				<Member Name="time" Type="int64" />
			</Type>
			<Type name="watch">
				<Member Name="time" Type="int64" />
				<Member Name="priority" Type="enum:crime_crimeLevel" />
			</Type>
			<Type name="fedUpWithSounds">
				<Member Name="lastReaction" Type="int64" />
				<Member Name="lastIgnoreBark" Type="int64" />
			</Type>
		</Type>
        
		<Type name="npcCooldowns">
			<Member Name="resolve_sucess" Type="crime:npcCooldown:resolve" />
			<Member Name="resolve_evade" Type="crime:npcCooldown:resolve" />
			<Member Name="watch" Type="crime:npcCooldown:watch" />
			<Member Name="fedUpWithSounds" Type="crime:npcCooldown:fedUpWithSounds" />
			<!-- Simple int64 cooldowns-->
			<Member Name="reactionToSoundWhenAlone" Type="int64" />
			<Member Name="leavingCrimeInterrupt" Type="int64" />
			<Member Name="owcd_personal" Type="int64" />
			<Member Name="owcd_npcGreeting" Type="int64" />
			<Member Name="playerLostInTrespass" Type="int64" />
			<Member Name="fledFromAttack" Type="int64" />
		</Type>
        
        <Type name="homeCooldowns">
            <Member Name="dogBarkReaction" Type="int64" />		<!-- NPC's reaction to dog's bark -->
            <Member Name="dogTrespassReaction" Type="int64" /> 	<!-- Dog's reaction to player in trespass (sound, perception) -->
        </Type>

		<Type Name="animalCooldowns">
			<Member Name="animalStartleCooldown" type="int64" />
			<Member Name="animalHowlCooldown" type="int64" />
			<Member Name="dogStoppedBarkingCooldown" type="int64" />
			<Member Name="soundReactionTimestamp" Type="int64" />
			<Member Name="horse_droppedFoodEatenCooldown" Type="int64" />
		</Type>

		<Type Name="surrenderCooldown" >
			<Member Name="lastSurrenderTimestamp" Type="int64" />
		</Type>

		<Type Name="animalDogBarkData">
			<Member Name="timestamp" type="int64" />
			<Member Name="position" type="vec3" />
			<Member Name="dog" type="wuid" />
		</Type>

		<Type Name="hitVolume">
			<Member Name="attacker" Type="wuid" />
			<Member Name="target" Type="wuid" />
			<Member Name="kind" Type="enum:crime_attackKind" />
			<Member Name="directHit" Type="bool" InitialValue="true" /> <!-- false for nearMiss -->
			<Member Name="hitStrength" Type="enum:HitReactionStrength" />
			<Member Name="indifferentHit" Type="bool" />
			<Member Name="animalKind" Type="enum:crime_animalKind" /> <!-- used only in animal_hitVolume -->
			<Member Name="isHorseCollision" Type="bool" />
		</Type>

		<Type Name="playerMountedVolume">
			<Member Name="mount" Type="wuid" />
		</Type>

		<Type Name="reportSource">
			<Member Name="information" Type="information" />
		</Type>

		<!-- To let animal know when to return during startled state -->
		<Type Name="animal_returnFromStartleRequest">
			<Member Name="requester" Type="wuid" />
			<Member Name="position" Type="vec3" />
			<Member Name="formationLock" Type="string" />
		</Type>

		<Type Name="item">
			<!-- For non-divisible items: -->
			<Member Name="instance" Type="wuid" />
			<!-- For divisible items (i.e. instance == null) -->
			<Member Name="class" Type="string" />
			<Member Name="count" Type="int" />
		</Type>

		<Type Name="jail">
			<Type Name="request">
				<Member Name="duration" Type="int" />
			</Type>
			<Type Name="end"/>
		</Type>

		<Type Name="assaultData">
			<Member Name="attacker" Type="wuid" />
			<Member Name="victim" Type="wuid" />
			<Member Name="kind" Type="enum:crime_attackKind" />
			<Member Name="hitStrength" Type="enum:HitReactionStrength" />
			<Member Name="directHit" Type="bool" />
			<Member Name="isHorseCollision" Type="bool" />
		</Type>

		<Type Name="punishment">
			<Member Name="fine" Type="int" />
			<Member Name="jail" Type="int" />
			<Member Name="violent" Type="int" />
			<Member Name="poaching" Type="int" />
			<Member Name="murder" Type="int" />
			<Member Name="confiscation" Type="int" />
			<Member Name="crimeCount" Type="int" />
			<Member Name="primary" Type="information" />
			<Member name="victimIsWoman" type="bool" />
			<Member name="victimIsGuard" type="bool" />
			<Member name="poaching_isMixedAnimal" type="bool" />
			<Member name="animalAbuse_isMixedAnimal" type="bool" />
			<Member name="animalAbuse_animalCount" type="int" />
			<Member name="containsKzikTrespass" type="bool" InitialValue="false" />
		</Type>

		<Type Name="animal_reactor">
			<Member Name="reactionKind" Type="enum:crime_animal_reactionKind" />
			<Member Name="timeCreated" Type="int64" />
			<Member Name="reservation" Type="bool" />
			<Member Name="shouldIgnorePerception" Type="bool" />
		</Type>

		<Type Name="hearingSubscriptionReactor">
			<Member Name="timeCreated" Type="int64" />
			<Member Name="pos" Type="vec3" />
			<Member Name="soundType" Type="enum:sound" />
		</Type>

		<Type Name="searchPoint">
			<Member Name="position" Type="vec3" />
			<Member Name="direction" Type="vec3" />
		</Type>

		<Type Name="animalMissingVolume">
			<Member Name="timestamp" Type="int64" />
			<Member Name="culprit" Type="wuid" />
			<Member Name="target" Type="wuid" />
			<Member Name="startleSource" Type="enum:crime_startleSource" />
			<Member Name="animalArchetype" Type="string" />
			<Member Name="isTheft" Type="bool" /> <!-- Either theft or startle -->
		</Type>

		<Type Name="corpseReactor">
			<Member Name="reactionKind" Type="enum:crime_reactionKind" />
			<Member Name="reservation" Type="bool" />
			<Member Name="noticableCorpseMissingVolume" Type="wuid" />
		</Type>

		<Type Name="relationship">
			<Member Name="value" Type="float" />
		</Type>

		<Type Name="resolution">
			<Member Name="kind" Type="enum:crime_resolutionKind" />
		</Type>

		<Type Name="selfhelpResolution">
			<Member Name="kind" Type="enum:crime_selfhelpResolutionKind" />
		</Type>

		<Type Name="playerUrging">
			<Member Name="priority" Type="enum:crime_playerUrgingPriority" />

			<Type Name="yieldPriorityMessage" />
		</Type>

		<Type Name="labelMetadata">
			<Member Name="isCrime" Type="bool" />
			<Member Name="isViolent" Type="bool" />
			<Member Name="importance" Type="int" />
			<Member Name="fine" Type="int" />
			<Member Name="jail" Type="int" />
			<Member Name="confiscation" Type="bool" />
			<Member Name="metaroleLabel" Type="string" />
			<Member Name="scalingWithVictimsSocialClass" Type="bool" />
		</Type>

		<Type Name="arrestChatFeedback">
			<Member Name="action" Type="enum:crime_arrestChatResult" /> <!-- 'escalate' / 'accept' / 'reject' / 'evade' -->
		</Type>

		<Type Name="selfhelpChatFeedback">
			<Member Name="action" Type="enum:crime_selfhelpChatResult" /> <!-- 'accept' / 'reject' / 'evade' -->
		</Type>

		<Type Name="campTrespassChatFeedback">
			<Member Name="action" Type="enum:crime_campTrespassChatResult" /> <!-- 'leave' / 'attack' / 'evade' -->
		</Type>

		<Type Name="secondArrestFeedback">
			<Member Name="action" Type="enum:crime_secondArrestFeedbackResult" /> <!-- 'acceptPunishment' / 'rejectPunishment' -->
		</Type>

		<Type Name="resolveDialogFeedback">
			<Member Name="action" Type="enum:crime_resolutionKind" /> <!-- 'fight' / 'fine' / 'skillcheck' / 'jail' -->
		</Type>

		<Type Name="selfhelp_resolveDialogFeedback">
			<Member Name="action" Type="enum:crime_selfhelpResolutionKind" /> <!-- 'fight' / 'pay' / 'skillcheck' -->
		</Type>

		<Type Name="friskChatFeedback">
			<Member Name="action" Type="enum:crime_friskChatResult" /> <!-- 'accept' / 'reject' / 'evade' -->
		</Type>

		<Type Name="mercyDialogueResult" >
			<Member Name="result" Type="enum:crime_mercyDialogueResult" />
		</Type>

		<Type Name="friskDialogFeedback">
			<Member Name="action" Type="enum:crime_friskDialogResult" /> <!-- 'frisk' / 'release' / 'fight' -->
		</Type>

		<Type Name="playerSurrenderChatFeedback" >
			<Member Name="action" Type="string" />
			<Member Name="force" Type="bool" />
		</Type>

		<Type Name="attackInitiatedByConcept" >
			<Member Name="target" Type="wuid" />
			<Member Name="priorityTarget" Type="bool" />
		</Type>

		<Type Name="stopFightByConcept" >
			<Member Name="attackStopped" Type="bool" />
		</Type>

		<Type Name="playerFinalSurrender" >
			<Member Name="surrender" Type="bool" />
		</Type>


		<Type Name="playerSurrenderDialogFeedback" >
			<Member Name="action" Type="enum:crime_surrenderDialogResult" />
		</Type>

		<Type Name="playerIsSurrendering" >
			<Member Name="isSurrendering" Type="bool" />
			<Member Name="leaveInterruptAttack" Type="bool" />
		</Type>

		<Type Name="offenceChatFeedback"> <!-- USELESS, BUT CANNOT BE DELETED -->
			<Member Name="action" Type="enum:crime_offenceChatAction" /> 
		</Type>

		<Type name="missingNpcData">
			<Member name="destination" type="vec3" />
			<Member name="time" type="int64" />
			<Member name="buddy" type="wuid" />
			<Member name="smartObject" type="wuid" />
		</Type>

		<Type name="playerLastSeen">
			<Member name="time" type="int64" />
			<Member name="position" type="vec3" />
		</Type>

		<Type name="animal_followUpBehavior">
			<Type name="eatDroppedFood">
				<Member name="active" type="bool" />
				<Member name="timestamp" type="int64" />
				<Member name="item" type="wuid" />
			</Type>
		</Type>

		<Type name="followUpBehavior">
			<Type name="checkHomeStashes">
				<Member name="stolenItemsFound" type="bool" />
				<Member name="playerRelated" type="bool" />
				<Member name="information" type="information" />
			</Type>

			<Type name="bandageMyself" />

			<Type name="checkStash" />
			<!--
			<Type name="emptyKettle">
				<Member name="active" type="bool" />
			</Type>
			-->
			<Type name="haulGameMeat">
				<Member name="active" type="bool" />
			</Type>

			<Type name="kickMissingNpc">
				<Member name="smartObject" type="wuid" />
			</Type>

			<Type name="lookAround">
				<Member Name="information" Type="information" />
				<Member Name="stimulusKind" Type="enum:crime_stimulusKind" />
				<Member Name="source" Type="enum:crime_source" />
			</Type>
			<Type name="markKettleAsPoisoned">
				<Member name="active" type="bool" />
				<Member name="kettle" type="wuid" />
				<Member name="realizedPoisonAfterEating" type="bool" />
				<Member name="kettleType" type="enum:kettleType" />
			</Type>
			<Type name="pickUpItem">
				<Member name="item" type="wuid" />
				<Member name="timestamp" type="int64" />
				<Member name="ignoreExpiration" type="bool" InitialValue="false" />
			</Type>
			<Type name="returnStartledAnimal">
				<Member name="active" type="bool" />
				<Member name="animal" type="wuid" />
				<Member Name="returnReason" Type="enum:crime_horseReturnReason" />
			</Type>
			<Type name="mourn">
				<Member name="corpse" type="wuid" />
			</Type>
			<Type name="report">
				<Member Name="assaultData" Type="crime:assaultData" />
				<Member Name="information" Type="information" />
				<Member Name="stimulusKind" Type="enum:crime_stimulusKind" />
				<Member Name="source" Type="enum:crime_source" />
			</Type>
			<Type name="wakeUp">
				<Member name="active" type="bool" />
			</Type>
			<Type name="watchCorpse">
				<Member name="active" type="bool" />
			</Type>
		</Type>

		<Type name="forgetCrimesData"> <!-- used to send a message from Skald to AI about forgetting crimes on an NPC -->
			<Member Name="self" Type="wuid" /> <!-- not used variable, just sending myself so we have special mailbox -->
		</Type>

		<Type name="stopCrime">
			<Member name="forgetCrimeInfo" type="bool" />
		</Type>

		<Type name="pilloryBreakVolumeData">
			<Member name="timestamp" type="int64" />
			<Member name="prisoner" type="wuid" />
		</Type>

		<Type name="produceSound"> <!-- used to send a message from Skald to AI to call ProduceSound node in player's brain -->
			<Member Name="position" Type="wuid" />
			<Member Name="sound" Type="enum:sound" />
			<Member Name="multiplier" Type="float" />
		</Type>

		<!-- [PP] @KCD2-142700 Crime daily check tech -->
		<Type Name="dailyCheck">
			<Member Name="timestamp" Type="int64" />
			<Member Name="numberOfDaysBeforeChecking" Type="int" />
			<Member Name="delayed" Type="bool" InitialValue="false" />

			<Type Name="corpseEntry">
				<Member Name="corpse" Type="wuid" />
			</Type>
			<Type Name="chestEntry">
				<Member Name="chest" Type="wuid" />
			</Type>
			<Type Name="homeEntry">
				<Member Name="home" Type="wuid" />
			</Type>
		</Type>

		<!--
			Override stimulus behaviors
			- all the override stimulus links have this type as their link-data
			- PP
		-->

		<Type name="overrideStimulusBehaviorData">
			<Member Name="priority" Type="int" />				<!-- so we can determine a override in case of multiple links-->
			<Member Name="shouldUsePredicate" Type="bool" />
			<Member Name="predicateFilename" Type="string" />	<!-- predicate tree for determining if we want to override -->
			<Member Name="predicateTreename" Type="string" />
			<Member Name="overrideFilename" Type="string" />	<!-- tree that overrides default stimulus behavior -->
			<Member Name="overrideTreename" Type="string" />
		</Type>

		<!--
			@KCD2-15854 A general crime resolution dialog override
			- Same type will be used for both arrest and selfhelp override (but a different link holding this type)
			- PP
		-->
		<Type name="arrestResolutionOverride">
			<Member Name="metarole" Type="string" />
			<Member Name="predicateFilename" Type="string" />	<!-- predicate tree for determining if we want to override -->
			<Member Name="predicateTreename" Type="string" />
		</Type>
	</Type>



	<!-- Switch -->
	<!-- =========================================================================== -->

	<Type Name="switch">

		<Type Name="arrowTouchdownData">
			<Member Name="position" Type="vec3" />
			<Member Name="shooter" Type="wuid" />
			<Member Name="target" Type="wuid" />
		</Type>

		<Type Name="awareness">
			<Member Name="perceptible" Type="wuid" />
		</Type>

		<Type Name="discoverCorpse">
			<Member Name="corpse" Type="wuid" />
		</Type>

		<Type Name="unconsciousBody">
			<Member Name="state" Type="enum:switch_unconsciousBodyState" />
		</Type>

		<Type Name="animal_stimulus">

			<Type Name="combat">
				<Member Name="attacker" Type="wuid" />
				<Member Name="target" Type="wuid" />
				<Member Name="isFromHitVolume" Type="bool" />
			</Type>

			<Type Name="enemy">
				<Member Name="enemy" Type="wuid" />
			</Type>
            
			<Type Name="flyBy">
				<Member Name="shooter" Type="wuid" />
				<Member Name="position" Type="vec3" />
			</Type>

			<Type Name="hit">
				<Member Name="attacker" Type="wuid" />
				<Member Name="kind" Type="enum:crime_attackKind" />
				<Member Name="hitStrength" Type="enum:HitReactionStrength" />
				<Member Name="victim" Type="wuid" />
				<Member Name="directHit" Type="bool" />
				<Member Name="attackerOnHorse" Type="bool" />
			</Type>

			<Type Name="item">
				<Member Name="item" Type="wuid" />
			</Type>

			<Type Name="human">
				<Member name="who" Type="wuid" /> <!-- asked -->
			</Type>
			
			<Type Name="sound">
				<Member Name="kind" Type="enum:sound" />
				<Member Name="position" Type="vec3" />
			</Type>

			<Type Name="startle">
				<Member Name="startleSource" Type="enum:crime_startleSource" />
			</Type>

			<Type Name="trespass" />

		</Type>

		<Type Name="stimulus">

			<Type Name="aim">
				<Member Name="attacker" Type="wuid" />
			</Type>

			<Type Name="animalAbuse">
				<Member Name="culprit" Type="wuid" />
				<Member Name="victim" Type="wuid" />
				<Member Name="animalAbuseKind" Type="enum:crime_animalAbuseKind" />
				<Member Name="isPoaching" Type="bool" />
				<Member Name="isRanged" Type="bool" />
				<Member Name="attributedCrime" Type="bool" /> <!-- Did gameKeeper found player right away or after lookAround -->
				<Member Name="shouldIncreaseCount" Type="bool" />
			</Type>

			<Type Name="animalCorpse">
				<Member Name="corpse" Type="wuid" />
				<Member Name="playerCaused" Type="bool" />
			</Type>

			<Type Name="combat">
				<Member Name="participant1" Type="wuid" />
				<Member Name="participant2" Type="wuid" />
				<Member Name="attackKind" Type="enum:crime_attackKind" />
				<Member Name="isHorseCollision" Type="bool" />
				<Member Name="freshlyAttributedCrime" Type="bool" />
				<Member Name="hitStrength" Type="enum:HitReactionStrength" />
			</Type>

			<Type Name="corpse">
				<Member Name="corpse" Type="wuid" />
				<Member Name="isFollowUp" Type="bool" />
				<Member Name="corpseStateOverrideActive" Type="bool" />
				<Member Name="corpseStateOverride" Type="enum:corpseState" />
				<Member Name="isIndifferent" Type="bool" />
			</Type>

			<Type Name="corpseViolation">
				<Member Name="corpse" Type="wuid" />
			</Type>

			<Type Name="corpseMissing">
				<Member Name="position" Type="vec3" />
				<Member Name="corpse" Type="wuid" />
			</Type>

			<Type name="criminal">
				<Member Name="freshlyAttributedCrime" Type="bool" />
				<Member Name="freshCrime" Type="bool" />
				<Member Name="information" Type="information" />
			</Type>

			<Type name="disturbance">
				<Member Name="perceivedWuid" Type="wuid" />
				<Member Name="priceOverride" Type="int" InitialValue="-1" />
				<Member Name="skipInitialReaction" Type="bool"/>
			</Type>

			<Type Name="dramaticBark">
				<Member Name="targetVec3" Type="vec3" />
			</Type>

			<Type Name="enemy">
				<Member Name="enemy" Type="wuid" />
			</Type>

			<Type Name="escalatedTrespass">
				<Member Name="wuidType" Type="enum:crime_trespassInformationWuid" />
				<Member Name="trespassArea" Type="wuid" />
				<Member Name="home" Type="wuid" />
				<Member Name="trespassingRepeatedly" Type="bool" />
				<Member Name="stimulusKind" Type="enum:crime_stimulusKind" />
				<Member Name="createInformationOnly" Type="bool" />
				<Member Name="isKzikTrespass" Type="bool" InitialValue="false" />
			</Type>
			
			<Type Name="foul" >
				<Member Name="kind" Type="enum:combat_skirmishFoul" />
			</Type>
			
			<Type Name="frisk" />

			<Type name="graveRobbing">
				<Member Name="grave" Type="wuid" />
			</Type>

			<Type Name="hit">
				<Member Name="attacker" Type="wuid" />
				<Member Name="kind" Type="enum:crime_attackKind" />
				<Member Name="hitStrength" Type="enum:HitReactionStrength" />
				<Member Name="victim" Type="wuid" />
				<Member Name="directHit" Type="bool" />
				<Member Name="freshlyAttributedCrime" Type="bool" />
				<Member Name="shouldSendNotification" Type="bool" InitialValue="true" />
			</Type>

			<Type Name="horseTheft">
				<Member Name="immediate" Type= "bool" InitialValue="true" />
				<Member Name="owner" Type= "wuid" />
				<Member Name="horse" Type= "wuid" />
			</Type>

			<Type Name="information">
				<Member Name="information" Type="information" />
				<Member Name="updated" Type="bool" />
				<Member Name="sender" Type="wuid" />
			</Type>

			<Type Name="item">
				<Member Name="item" Type="wuid" />
			</Type>

			<Type Name="kettlePoisoning">
				<Member Name="kettle" Type="wuid" />
				<Member Name="victim" Type="wuid" />
				<Member Name="markKettleAsPoisoned" Type="bool" />
				<Member Name="kettleType" Type="enum:kettleType" />
			</Type>

			<Type Name="lockpick">
				<Member Name="lock" Type="wuid" />
			</Type>

			<Type Name="lyingBody">
				<Member Name="body" Type="wuid" />
			</Type>

			<Type name="missingAnimal">
				<Member name="animal" type="wuid" />
				<Member name="volume" type="wuid" />
				<Member Name="returnReason" Type="enum:crime_horseReturnReason" />
				<Member name="instantReturnAnimal" Type="bool" />
			</Type>

			<Type name="missingNpc">
				<Member name="missingNpc" type="wuid" />
				<Member name="canBeFound" type="bool" InitialValue="true" />
				<Member name="missingNpcData" type="crime:missingNpcData" />
				<Member name="volume" type="wuid" />
				<Member name="alwaysUseDataDestination" type="bool" InitialValue="false" />
			</Type>

			<Type Name="murder">
				<Member Name="information" Type="information" />
				<Member Name="corpse" Type="wuid" />
				<Member Name="isCarried" Type="bool" />
				<Member Name="freshlyAttributedCrime" Type="bool" />
				<Member Name="killedByDog" Type="bool" />
				<Member Name="killedByHorse" Type="bool" />
			</Type>

			<Type name="nearTrespass" />

			 <Type Name="nonAttributedCrime">
			    <Member Name="information" Type="information" />
			    <Member Name="corpseState" Type="enum:corpseState" />
			 </Type>

			<Type name="offence" />

			<Type Name="pickpocket">
				<Member Name="pivot" Type= "wuid" />
				<Member Name="bagType" Type= "enum:crime_pickpocketBagType" />
			</Type>

			<Type name="pilloryBreak">
				<Member name="volume" type="wuid" />
			</Type>
            
            <Type name="playerCompanion">
				<Member name="companion" type="wuid" />
                <Member name="forceSemipublicReaction" type="bool" />
			</Type>

			<Type Name="shooter">
				<Member Name="shooter" Type="wuid" />
				<Member name="projectileType" type="enum:crime_projectileType" />
				<Member Name="hitStrength" Type="enum:HitReactionStrength" />
				<Member Name="position" Type="vec3" />
				<Member Name="target" Type="wuid" />
				<Member Name="gotDirectHit" Type="bool" />
				<!-- Startling animals helper -->
				<Member Name="skipNervousnessCheck" Type="bool" InitialValue="false" />
				<!-- AnimalAbuse helpers -->
				<Member Name="animalAbuseKind" Type="enum:crime_animalAbuseKind" />
				<Member Name="animalAbuseIsPoaching" Type="bool" />
			</Type>

			<Type Name="sound">
				<Member Name="kind" Type="enum:sound" />
				<Member Name="position" Type="vec3" />
			</Type>



			<Type Name="theft">
				<Member Name="information" Type="information" />
				<Member Name="immediate" Type= "bool" InitialValue="true" />
				<Member Name="isNonAttributed" Type= "bool" />
				<Member Name="freshlyAttributedCrime" Type="bool" />
				<Member Name="method" Type= "enum:crime_theftMethod" />
				<Member Name="count" Type= "int" /> <!-- Only used when pushing  a stimulusTheft from QuestSystem -->
				<Member Name="owner" Type= "wuid" />
				<Member Name="pivot" Type= "wuid" />
				<Member Name="kettleType" Type="enum:kettleType" />
				<Member Name="treatAsPersonalSource" Type= "bool" /> <!-- force reaction when trying to sell stolen goods to merchant -->
				<Member Name="shouldCheckHomeStashes" Type="bool" InitialValue="false" />
			</Type>

			<Type Name="threat">
				<Member Name="threatSource" type="wuid" />
			</Type>

			<Type Name="trespass">
				<Member Name="isCampTrespass" Type="bool" />
				<Member Name="severeness" Type="enum:trespassLevel" />
				<Member Name="area" Type="wuid" />
			</Type>
            
			<Type Name="unconsciousBody">
				<Member Name="body" Type="wuid" />
			</Type>

			<Type Name="unknownShooter">
				<Member Name="shooter" Type="wuid" />
				<Member name="projectileType" type="enum:crime_projectileType" />
				<Member Name="position" Type="vec3" />
				<Member Name="target" Type="wuid" />
				<Member Name="directHit" Type="bool" />
			</Type>

		</Type>

		<Type Name="hotEntity">
			<Member Name="stimulusShooter" Type="switch:stimulus:shooter" />
			<Member Name="stimulusTheft" Type="switch:stimulus:theft" />
			<Member Name="stimulusMurder" Type="switch:stimulus:murder" />
			<Member Name="stimulusAnimalAbuse" Type="switch:stimulus:animalAbuse" />
			<Member Name="stimulusMissingAnimal" Type="switch:stimulus:missingAnimal" />
            <Member Name="stimulusSound" Type="switch:stimulus:sound" />
            <Member Name="suspiciousDoor" Type="wuid" />
			<Member Name="information" Type="information" /> <!-- mainly for nonAttributedCrimes -->
			<Member Name="reason" Type="enum:switch_hotEntityReason" />
			<Member Name="expiration" Type="int64" />
			<Member Name="timestamp" Type="int64" />
		</Type>

		<Type Name="onHotEntitySeenEvent">
			<Member Name="target" Type="wuid" /> <!-- who was the hotEntity target -->
			<Member Name="data" Type="switch:hotEntity" /> <!-- hotEntity data for this target-->
		</Type>

		<Type Name="animal_interruptData">
			<Member Name="initiatedBy" Type="enum:switch_interruptInitiator" />
			<Member Name="previousReaction" Type="enum:crime_animal_reactionKind" />
			<Member Name="stimulusKind" Type="enum:crime_animal_stimulusKind" />

			<Type Name="annoyance">
				<Member Name="target" type="wuid" />
				<Member Name="attackKind" type="enum:crime_attackKind" />
			</Type>

			<Type Name="attack">
				<Member Name="target" type="wuid" />
				<Member Name="skirmishRelationOverride" type="enum:skirmishRelationOverride" />
			</Type>

			<Type Name="check">
				<Member Name="target" type="wuid" />
			</Type>

			<Type Name="eatDroppedFood">
				<Member Name="item" type="wuid" />
			</Type>

			<Type Name="escape">
				<Member Name="target" type="vec3" />
				<Member Name="distanceToFlee" type="float" />
				<Member Name="keepMinimalDistance" type="float" />
				<Member Name="movementSpeed" type="enum:movementSpeed" />
				<Member Name="shouldEmitInformation" type="bool" />
				<Member Name="escapeFromWuid" type="wuid" />
				<Member Name="escapeFromVec3" type="vec3" />
				<Member Name="useVec3ForEscape" type="bool" />
				<Member Name="ignorePriority" type="bool" />
			</Type>

			<Type Name="howl">
				<Member Name="shouldEmitInformation" type="bool" />
			</Type>

			<Type Name="lookAround">
				<Member Name="targetPosition" type="vec3" />
			</Type>

			<Type Name="startle">
				<Member Name="initialPosition" Type="vec3" />
				<Member Name="target" Type="wuid" />
				<Member Name="volume" Type="wuid" />
				<Member Name="suppressBuckingAnimation" Type="bool" InitialValue="false" />	<!-- doesn't play bucking animation -->
			</Type>

			<Type Name="reposition">
				<Member Name="target" type="wuid" />
				<Member Name="repositionFromVec3" type="vec3" />
				<Member Name="distanceToFlee" type="float" />
				<Member Name="keepMinimalDistance" type="float" />
				<Member Name="movementSpeed" type="enum:movementSpeed" />
        <Member Name="isBanishment" type="bool" />
				<Member Name="banishmentSource" type="wuid" />
			</Type>

			<Type Name="returnFromStartle">
				<Member Name="positionToReturnTo" Type="vec3" />
				<Member Name="formationLock" Type="string" />
			</Type>

			<Type Name="watchTrespass" />

		</Type>

		<Type Name="interruptData">
			<Member Name="initiatedBy" Type="enum:switch_interruptInitiator" />
			<Member Name="previousReaction" Type="enum:crime_reactionKind" />
			<Member Name="stimulusKind" Type="enum:crime_stimulusKind" />
			<Member Name="source" Type="enum:crime_source" />

			<Type Name="arrest">
				<Member Name="assaultData" Type="crime:assaultData" />
				<Member Name="information" Type="information" />
				<Member Name="trespassingRepeatedly" Type="bool" />
				<Member Name="freshlyAttributedCrime" Type="bool" />
				<Member Name="alreadyCriminal" Type="bool" />															<!-- for backward compatibility -->
				<Member Name="criminalFreshness" Type="enum:crime_criminalFreshness" />
				<Member Name="crimeSeen" Type="bool" />
			</Type>

			<Type Name="attack">
				<Member Name="information" Type="information" />
				<Member Name="assaultData" Type="crime:assaultData" />
				<Member Name="defenceMode" Type="bool" />
				<Member name="relationOverride" type="bool" />
				<Member Name="target" Type="wuid" />
				<Member Name="freshlyAttributedCrime" Type="bool" />
				<Member Name="alreadyCriminal" Type="bool" />															<!-- for backward compatibility -->
				<Member Name="criminalFreshness" Type="enum:crime_criminalFreshness" />
				<Member Name="escalatedFromFailedSurrender" Type="bool" />
			</Type>

			<Type Name="bandageMyself" /> <!-- UHM, just for an unique signature -->

			<Type Name="banishCompanion">
                <Member Name="information" Type="information" />
				<Member Name="companion" Type="wuid" />
                <Member Name="forceSemipublicReaction" Type="bool" />
			</Type>

			<Type name="check">
				<Member Name="information" Type="information" />
				<Member name="target" type="wuid" />
				<Member name="iconDisabled" type="bool" />
			</Type>

			<Type name="choke">
			</Type>

			<Type name="checkLyingBody" >
				<Member Name="information" Type="information" />
				<Member name="body" type="wuid" />
			</Type>

			<Type name="checkHomeStashes" >
				<Member Name="information" Type="information" />
				<Member name="home" type="wuid" />
				<Member name="playerRelated" type="bool" />
				<Member name="stolenItemsFound" type="bool" />
			</Type>

			<Type name="checkPockets" >
				<Member name="missingValue" type="int" />
				<Member name="playerRelated" type="bool" />
			</Type>

			<Type name="checkProperty" >
				<Member Name="information" Type="information" />
				<Member name="home" type="wuid" />
				<Member name="missingNpc" type="wuid" />
				<Member name="suspiciousDoor" type="wuid" />
				<Member name="suspiciousDoorFreshlyOpened" type="bool" />
				<Member name="suspiciousDoorNonattributable" type="bool" />
			</Type>

			<Type name="checkStash" >
				<Member name="stash" type="wuid" />
			</Type>

			<Type name="markKettleAsPoisoned" >
				<Member Name="information" Type="information" />
				<Member Name="kettle" Type="wuid" />
				<Member name="realizedPoisonAfterEating" type="bool" />
				<Member name="kettleType" type="enum:kettleType" />
			</Type>

			<Type Name="flee">
				<Member Name="assaultData" Type="crime:assaultData" />
				<Member Name="information" Type="information" />
				<Member Name="target" Type="wuid" />
				<Member Name="corpseState" Type="enum:corpseState" />
				<Member Name="priority" Type="int" />
				<Member Name="freshlyAttributedCrime" Type="bool" />
				<Member Name="alreadyCriminal" Type="bool" />															<!-- for backward compatibility -->
				<Member Name="criminalFreshness" Type="enum:crime_criminalFreshness" />
				<Member Name="leaveLevel" Type="bool" />
				<Member Name="ignorePriority" Type="bool" />		<!-- used in skald interface -->
				<Member Name="isIndifferent" Type="bool" />
				<Member Name="mercyDialogueResult" Type="enum:crime_mercyDialogueResult" />
			</Type>

			<Type Name="frisk" >
				<Member Name="information" Type="information" />
			</Type>

			<Type Name="haulGameMeat">
				<Member Name="information" Type="information" />
				<Member Name="corpse" Type="wuid" />
			</Type>

			<Type Name="kickPlayerFromTimeskip">
				<Member Name="information" Type="information" />
			</Type>

			<Type Name="lookAround">
				<Member Name="information" Type="information" />
				<Member Name="corpseState" Type="enum:corpseState" />
				<Member Name="direction" Type="vec3" />
				<Member Name="searchPointsFromDirection" Type="bool" />
				<!-- For reason = missingNpc: -->
				<Member name="amIBuddy" type="bool" />
				<Member name="missingNpc" type="wuid" />
				<!-- For reason = shooter: -->
				<Member Name="directHit" Type="bool" />
				<Member Name="position" Type="vec3" />
				<Member Name="shooter" Type="wuid" />
				<!-- For reason = soundr: -->
				<Member Name="soundType" Type="enum:sound" />
				<Member Name="reactingBecauseAlone" Type="bool" />
				<!-- For reason = information: -->
				<Member Name="reactingToReportFrom" Type="wuid"/>
				<Member Name="alarmReactionType" Type="enum:crime_alarmReactionType"/>

				<!-- For reason = animalAbuse: -->
				<Member Name="stimulusAnimalAbuse" Type="switch:stimulus:animalAbuse" />
			</Type>

			<Type Name="scan">
				<Member Name="information" Type="information" />
				<Member Name="stimulusShooter" Type="switch:stimulus:shooter" />
				<Member Name="stimulusAnimalAbuse" Type="switch:stimulus:animalAbuse" />
				<Member Name="stimulusMissingAnimal" Type="switch:stimulus:missingAnimal" />
				<Member Name="scanDirection" Type="vec3" />
				<Member Name="corpseState" Type="enum:corpseState" />
			</Type>

			<Type Name="mercy" >
				<Member Name="information" Type="information" />
				<Member Name="isIndifferent" Type="bool" />
			</Type>

			<Type name="mindPlayer" >
				<Member Name="information" Type="information" />
				<!-- For disturbance bark -->
				<Member Name="soundType" Type="enum:sound" />
			</Type>

			<Type name="missingNpcFound" >
				<Member Name="missingNPC" Type="wuid" />
				<Member Name="searchingNPC" Type="wuid" />
			</Type>

			<Type Name="mlodPeek" >
				<Member Name="target" Type="wuid" />
			</Type>

			<Type Name="mourn" >
				<Member Name="corpse" Type="wuid" />
			</Type>

			<Type Name="pickUpItem">
				<Member Name="information" Type="information" />
				<Member Name="item" Type="wuid" />
			</Type>
			
			<Type Name="postSkirmish">
				<Member Name="temp" Type="bool" />
			</Type>

			<Type Name="report">
				<Member Name="assaultData" Type="crime:assaultData" />
				<Member Name="destination" Type="wuid" />
				<Member Name="destinationType" Type="enum:crime_reportDestinationType" />
				<Member Name="emittingDisabled" Type="bool" />
				<Member Name="information" Type="information" />
				<Member Name="movementSpeed" Type="enum:movementSpeed" />
				<Member Name="corpseState" Type="enum:corpseState" />
				<Member Name="freshlyAttributedCrime" Type="bool" />
				<Member Name="alreadyCriminal" Type="bool" />															<!-- for backward compatibility -->
				<Member Name="criminalFreshness" Type="enum:crime_criminalFreshness" />
				<Member Name="disableDetected" Type="bool" />
			</Type>

			<Type Name="resolve" >
				<Member Name="information" Type="information" />
				<Member Name="resolutionDialogIntroKind" Type="enum:crime_resolutionDialogIntroKind" />
			</Type>

			<Type Name="returnStartledAnimal">
				<Member Name="animal" Type="wuid" />
				<Member Name="returnReason" Type="enum:crime_horseReturnReason" />
			</Type>

			<Type Name="returnWithHelp">
				<Member Name="information" Type="information" />
				<Member Name="helpingNpc" Type="wuid" />
				<Member Name="crimePos" Type="vec3" />
			</Type>

			<Type name="selfhelp" >
				<Member Name="assaultData" Type="crime:assaultData" />
				<Member name="information" type="information" />
				<Member Name="freshlyAttributedCrime" Type="bool" />
				<Member Name="alreadyCriminal" Type="bool" />															<!-- for backward compatibility -->
				<Member Name="criminalFreshness" Type="enum:crime_criminalFreshness" />
			</Type>

			<Type name="selfhelp_resolve" >
				<Member name="information" type="information" />
			</Type>

			<Type Name="stopReaction">
				<Member Name="reactorCount" Type="int" />
				<Member Name="forgetCrimeInfo" Type="bool" />
			</Type>

			<Type Name="throwOutUnconsciousPlayer" />

			<Type Name="warnPlayer" >
				<Member Name="information" Type="information" />
			</Type>

			<Type Name="watch">
				<Member Name="assaultData" Type="crime:assaultData" />
				<Member Name="crimeLevel" Type="enum:crime_crimeLevel" />
				<Member Name="defenceMode" Type="bool" />
				<Member Name="information" Type="information" />
				<Member Name="target" Type="wuid" />
				<Member Name="corpseState" Type="enum:corpseState" />
				<Member Name="freshlyAttributedCrime" Type="bool" />
				<Member Name="alreadyCriminal" Type="bool" />															<!-- for backward compatibility -->
				<Member Name="criminalFreshness" Type="enum:crime_criminalFreshness" />
			</Type>

			<Type Name="wakeUp">
				<Member Name="information" Type="information" />
				<Member Name="target" Type="wuid" />
			</Type>

			<Type Name="watchCorpse">
				<Member Name="corpse" Type="wuid" />
				<Member Name="information" Type="information" />
				<Member Name="noticableCorpseMissingVolume" Type="wuid" />
				<Member Name="seenBefore" Type="bool" />
			</Type>

			<Type Name="watchTrespass" >
				<Member Name="information" Type="information" />
				<Member Name="onlyWaitingForDeparture" Type="bool" />
			</Type>

			<Type Name="watchCampTrespass" >
				<Member Name="information" Type="information" />
				<Member Name="postSurrender" Type="bool" />
		</Type>
		</Type>

		<Type Name="callInterruptData">
			<Type Name="lookAround">
				<Member Name="ignorePriority" Type="bool" />
				<Member Name="priority" Type="int" />
				<Member Name="interruptData" Type="switch:interruptData:lookAround" />
			</Type>
		</Type>

		<Type Name="barkGenderData">
			<Member Name="isGenderSpecific" Type="bool" />
			<Member Name="isMan" Type="bool" />
		</Type>

		<Type Name="barkData">
			<Member Name="priority" Type="int"/>
			<Member Name="metarole" Type="string"/>
			<Member Name="lookAt" Type="wuid"/>
			<Member Name="isDramatic" Type="bool"/>
			<Member Name="barkKind" Type="enum:crime_barkReactionKind" />
			<Member Name="barkType" Type="enum:crime_barkReactionType" />
			<Member Name="genderData" Type="switch:barkGenderData" />
			<Member Name="serializedDialogContext" Type="string" />
			<Member Name="animationApproach" Type="enum:animationApproach" InitialValue="$enum:animationApproach.dontPlayDialogAnimations" />
		</Type>

		<Type Name="additiveAnimData">
			<Member Name="fragment" Type="string"/>
			<Member Name="tags" Type="string"/>
		</Type>

		<Type Name="reactionIntermediateData" >
			<Member Name="barkData" Type="switch:barkData" />
			<Member Name="animData" Type="switch:additiveAnimData" />
		</Type>

		<Type Name="rentRoom" >
			<Member Name="untilEndOfTheGame" Type="bool" />
		</Type>

		<Type Name="teleportRequest">
			<Member name="positionVec3" type="vec3" />
			<Member name="positionWuid" type="wuid" />
			<Member name="shouldUseWuidPosition" type="bool" />
		</Type>

		<Type Name="cancelPerceptionIgnoreRequest">
			<Member Name="wasIgnoredAtLeastFor" type="string" />
			<Member Name="perceptibleObject" type="wuid" />
		</Type>

		<Type Name="spawnPilloryBreakVolumeRequest">
			<Member Name="pillory" type="wuid"  ConceptWuidType="LinkableObject" />
			<Member Name="prisoner" type="wuid" ConceptWuidType="Soul" />
		</Type>

		<!-- [PP]@KCD2-81734 - running custom trees in NPC's switch -->
		<Type Name="customSwitchTreeEntry">
			<Member Name="treeFilename" Type="string" />
			<Member Name="treeName" Type="string" />
			<Member Name="subtreeRan" Type="bool" />
		</Type>

	</Type>

	<!-- Event -->
	<!-- =========================================================================== -->

	<Type Name="event">
		<Type Name="prepadeniNaCeste">
			<Type Name="calm" />
		</Type>
		<Type Name="hlasatel">
			<Type Name="dialogTrigger" />
		</Type>
	</Type>

	<!-- Special modules -->
	<!-- =========================================================================== -->

	<Type Name="special">
		<Type Name="hostageSituation">
			<Type Name="animationSet">
				<Member Name="HoldHostage_Tense" Type="string"/>
				<Member Name="HoldHostage_Calm" Type="string"/>
				<Member Name="KidnapperReleasesHostage_BothToIdle" Type="string"/>
				<Member Name="KidnapperReleasesHostage_HostageKillsKidnapper" Type="string"/>
				<Member Name="KidnapperKillsHostage_KidnapperToIdle" Type="string"/>
				<Member Name="KidnapperKillsHostage_KidnapperToCombat" Type="string"/>
				<Member Name="KidnapperGetsHit_KidnapperToCombat_HostageToGround" Type="string"/>
				<Member Name="KidnapperGetsHit_KidnapperDies_HostageToGround" Type="string"/>
				<Member Name="HostageGetsHit_HostageDies_KidnapperToCombat" Type="string"/>
			</Type>
		</Type>

		<Type Name="cheering">
			<Type Name="variantData">
				<Member Name="variant" Type="string"/>
				<Member Name="unstanceName" Type="string"/>
				<Member Name="animationTag" Type="string"/>
			</Type>
			<Type Name="shoutingConfiguration">
				<Member Name="ongoing_cooldown_base" Type="int"/>
				<Member Name="ongoing_cooldown_randomAddition" Type="int"/>
				<Member Name="ongoing_simultaneousShouting_limit" Type="int"/>
				<Member Name="reaction_cooldown_base" Type="int"/>
				<Member Name="reaction_cooldown_randomAddition" Type="int"/>
				<Member Name="reaction_simultaneousShouting_limit" Type="int"/>
				<Member Name="reaction_delay_limit" Type="int"/>
			</Type>
			<Type Name="shoutingAllowedTimes">
				<Member Name="ongoing" Type="int64"/>
				<Member Name="reaction" Type="int64"/>
			</Type>
			<Type Name="reaction">
				<Member Name="type" Type="enum:cheering_reactionType"/>
			</Type>
			<Type Name="finish"/>
		</Type>
	</Type>

	<!-- Weapon -->
	<!-- =========================================================================== -->

	<Type Name="weapon">

		<Type Name="onPlayerArrowFlyingBy">
			<Member Name="GUID" Type="wuid" />
			<Member Name="Position" Type="vec3" />
			<Member Name="Direction" Type="vec3" />
		</Type>
	</Type>

	<!-- Player-->
	<!-- =========================================================================== -->

	<Type Name="hitData">
		<Member Name="target" Type="wuid" />
		<Member Name="projectile" Type="wuid" />
		<Member Name="offset" Type="vec3" />
		<Member Name="isStabbed" Type="bool" />
		<Member Name="isHeadshot" Type="bool" />
		<Member Name="ammoClass" Type="enum:ammo_class" />
	</Type>
	
	<!-- Data forwarding -->

	<Type Name="hitDataForwarding">
		<Member name="sender" type="wuid" />
		<Member name="data" type="hitData" />
	</Type>

	<Type Name="onSoulRevivedForwarding">
		<Member name="sender" type="wuid" />
		<Member name="data" type="rpgModule:rpgModule:onSoulRevived" />
	</Type>

	<!-- Animals -->
	<!-- =========================================================================== -->

	<Type Name="animal">
		<Type Name="despawnRequest">
			<Member Name="killed" Type="bool" />
		</Type>
		<Type Name="playerIn">
			<Member Name="param" Type="bool" />
		</Type>
		<Type Name="playerOut">
			<Member Name="param" Type="bool" />
		</Type>
		<Type Name="spawnParameters">
			<Member Name="amount" Type="int"/>
			<Member Name="class" Type="string"/>
			<Member Name="radius" Type="float"/>
			<Member Name="respawn" Type="string"/>
		</Type>
		<Type Name="behaviorParameters">
			<Member Name="true" Type="bool" />
		</Type>
		<Type Name="startle">
			<Member Name="origin" Type="wuid" />
		</Type>
		<Type Name="boid">
			<Member Name="separation" Type="float" InitialValue="6.0" />
			<Member Name="alignment" Type="float" InitialValue="0.6" />
			<Member Name="cohesion" Type="float" InitialValue="0.3" />
			<Member Name="threat" Type="float" InitialValue="1.0" />
			<Member Name="herdSize" Type="float" InitialValue="20.0" />
			<Member Name="targetSeparation" Type="float" InitialValue="10.0" />
			<Member Name="maxSeparationForce" Type="float" InitialValue="4.0" />
			<Member Name="safeDistance" Type="float" InitialValue="15.0" />
			<Member Name="activationTreshold" Type="float" InitialValue="0.6" />
			<Member Name="deactivationTreshold" Type="float" InitialValue="0.4" />
			<Member Name="runTreshold" Type="float" InitialValue="1.6" />
			<Member Name="strafeAngle" Type="float" InitialValue="30.0" />
			<Member Name="homeWeightSafe" Type="float" InitialValue="5.0" />
			<Member Name="homeWeightThreatened" Type="float" InitialValue="2.0" />
			<Member Name="reactToThreats" Type="bool" InitialValue="false"/>
			<Member Name="strafe" Type="bool" InitialValue="false"/>
			<Member Name="suppressSwitchImpulses" Type="bool" InitialValue="false"/>
		</Type>
		<Type Name="dog">
			<Type Name="stopBarkingRequest">
				<Member Name="source" Type="wuid" />
			</Type>
		</Type>
		<Type Name="pigFeedEvent">
			<Member Name="_" Type="bool" InitialValue="false"/>
		</Type>
	</Type>

	<!-- Kettle  -->
	<!-- =========================================================================== -->

	<Type Name="kettle">
		<Type Name="buffChangeTimestamp">
			<Member Name="type" Type="enum:buffTimestampType" InitialValue="$enum:buffTimestampType.buffAdded"/>
			<Member Name="guid" Type="string" />
			<Member Name="time" Type="int64" />
		</Type>
		<Type Name="buffUser">
			<Member Name="user" Type="wuid" />
			<Member Name="time" Type="int64" />
		</Type>
		<Type Name="bowlFill">
			<Member Name="bowl" Type="wuid" />
			<Member Name="time" Type="int64" />
		</Type>
		<Type Name="signal">
			<Type Name="onCooking">
				<Member Name="_" Type="bool" />
			</Type>
			<Type Name="onPlayerEating">
				<Member Name="_" Type="bool" />
			</Type>
			<Type Name="onMLODRefresh">
				<Member Name="_" Type="bool" />
			</Type>
			<Type Name="onNPCEating">
				<Member Name="user" Type="wuid" />
				<Member Name="bowl" Type="wuid" />
				<Member Name="inMLOD" Type="bool" />
			</Type>
			<Type Name="onBowlFilled">
				<Member Name="bowl" Type="wuid" />
			</Type>
			<Type Name="onBuffAdd">
				<Member Name="guid" Type="string" />
			</Type>
			<Type Name="onBuffCrimeNotice">
				<Member Name="_" Type="bool" />
			</Type>
			<Type Name="onFireplacePhaseChange">
				<Member Name="state" Type="enum:kettleFireState" />
				<Member Name="onInit" Type="bool" InitialValue="false"/>
			</Type>
			<Type Name="onPlayerInteractionItemRequest">
				<Member Name="_" Type="bool" />
			</Type>
			<Type Name="onKettleStateChange">
				<Member Name="state" Type="enum:kettleState" />
			</Type>
		</Type>
		<Type Name="persistentStorage">
			<Member Name="crimeNotice" Type="bool" />
			<Member Name="lastCrimeNoticeTime" Type="int64" />
			<Member Name="playerEatingCount" Type="int"/>
			<Member Name="state" Type="enum:kettleState" InitialValue="$enum:kettleState.full"/>
			<Member Name="fireState" Type="enum:kettleFireState" />
			<Member Name="lastOnCookingTick" Type="int64" />
			<Member Name="lastOnUseTick" Type="int64" />
			<Member Name="npcBuffedCount" Type="int"/>
		</Type>
		<Type Name="cauldronProceduralPrefab">
			<Member Name="category" Type="string" />
			<Member Name="empty" Type="int"/>
			<Member Name="half" Type="int"/>
			<Member Name="full" Type="int"/>
		</Type>
		<Type Name="link">
			<Type Name="volumeData">
				<Member Name="target" Type="wuid" />
				<Member Name="type" Type="enum:kettleType" InitialValue="$enum:kettleType.kettle"/>
			</Type>
			<Type Name="lastUsedKettle">
				<Member Name="target" Type="wuid" />
				<Member Name="time" Type="int64" />
				<Member Name="type" Type="enum:kettleType" InitialValue="$enum:kettleType.kettle"/>
			</Type>
		</Type>
	</Type>

	<!-- RPGModule -->
	<!-- =========================================================================== -->

	<Type Name="rpgModule">
		<Type Name="buffTagChanged">
			<Member Name="tagId" Type="enum:buffTagId" />
			<Member Name="add" Type="bool" />
		</Type>
	</Type>

	<Type Name="entityModule">
		<Type Name="onObserved">
			<Member Name="state" Type="bool" />
		</Type>
		<Type Name="onHumanHorseMount">
			<Member Name="mounting" type="bool"/>
			<Member Name="mountId" Type="wuid" />`
			<Member Name="result" type="enum:HorseResult" />
		</Type>
	</Type>
	
	<Type Name="horseModule">
		<Type Name="playerCommand">
			<Member Name="id" type="enum:HorseCommands"/>
		</Type>
		<Type Name="changeMountable">
			<Member Name="value" type="bool"/>
		</Type>
		<Type Name="onHorsePossessed"> 
			<Member Name="horse" type="wuid" />
		</Type>
		<Type Name="selfCleaning" />
		<Type Name="banishRequest">	<!-- NPC request the horse to reposition because of banishCompanion behaviour -->
			<Member Name="sender" type="wuid" />
		</Type>
	</Type>

	<!--****************************** RPG MODULE TYPES  ***********************************-->


	<Type Name="interactionModule">
		<Type Name="onInteraction">
			<Member Name="target" Type="string" />
			<Member Name="id" Type="wuid" />
			<Member Name="usedItem" Type="wuid" />
            <Member Name="isHoldAction" Type="bool" />
		</Type>

    <!-- Used as indexed array to send multiple items in message (right before onInteraction message) -->
    <Type Name="itemSelection">
      <Member Name="id" Type="wuid" />
    </Type>
	</Type>


	<!-- *************************** FORMATION ******************************************* -->
    <!-- [PP] removed duplicate formationData and followFormationParams types -->

	<!-- Test -->
	<!-- =========================================================================== -->


	<Type name="test">

		<Type name="test_waitParams">
			<Member name="duration" type="string" />
			<Member name="variation" type="string" />
		</Type>

	</Type>


	<!-- Pouze pro zpetnou kompatibilitu -->
	<!-- =========================================================================== -->

	<!-- Smazat -->
	<!-- KCD2-5391 -->
	<Type Name="hitReaction">
		<Member Name="attacker" Type="wuid" />
		<Member Name="hitStrength" Type="enum:HitReactionStrength" />
		<Member Name="hitType" Type="enum:HitReactionType" />
		<Member Name="targetOrigMat" Type="int" />
	</Type>


	<!-- NOT OSBOLETE. Used in bench! -->
	<Type Name="player">

		<Type Name="holsterWeapon">
			<!--Member Name="instantHolster" Type="bool" InitialValue="false" /-->		<!-- obsolete parameter -->
			<!--Member Name="keepHalberd" Type="bool" InitialValue="false" /-->			<!-- obsolete parameter -->
			<Member Name="keepTorch" Type="bool" InitialValue="true" />
		</Type>

		<!-- OBSOLETE (just for backward compatibility) -->
		<Type Name="pickUp">
			<Member Name="item" Type="wuid" />
			<Member Name="hand" Type="int" />
		</Type>

		<Type Name="surrender">
			<Member Name="forced" Type="bool" InitialValue="false" />
		</Type>

		<Type name="sittingAction">
			<Member Name="action" Type="enum:playerSittingAction" />
			<Member Name="interrupter" Type="wuid" />
			<Member Name="internal" Type="bool" InitialValue="false"/> <!-- true if sent from script -->
		</Type>

		<Type Name="playerEat">
			<Member Name="itemGuid" Type="string" />
		</Type>

		<Type Name="dismountRequest">
		</Type>

		<Type name="getUsableMessage" />

		<Type name="setPerceptible">
			<Member name="value" type="bool" />
		</Type>

		<Type name="request">
			<Member name="target" type="wuid" />
			<Member name="mode" type="string" />
			<Member name="behavior" type="string" />
			
			<Member name="persistent" type="bool">true</Member>
			<Member name="instant" type="bool">false</Member>
			
			<Member name="release" type="bool">false</Member>
			<Member name="releaseAnyTarget" type="bool">false</Member>
			
			<Member name="onInteractive" type="bool">true</Member>
		</Type>

		<Type Name="followRequest">
			<Member name="npcWhoIsFollowed" type="wuid" />
		</Type>

	</Type>

	<!-- Old KCD1 Dialog types -->

	<Type Name="dialogModule">
		<Type Name="onDialogRequest">
			<Member Name="state" Type="bool" InitialValue="false" />
			<Member Name="GUID" Type="wuid" />
			<Member Name="isForced" Type="bool" InitialValue="false" />
			<Member Name="reqId" Type="int" InitialValue="0" />
		</Type>
		<Type Name="onDialogRequestTimedOut">
			<Member Name="GUID" Type="wuid" />
			<Member Name="reqId" Type="int" InitialValue="0" />
		</Type>
		<Type Name="onDialogRequestCanceled">
			<Member Name="GUID" Type="wuid" />
			<Member Name="reqId" Type="int" InitialValue="0" />
		</Type>
		<Type Name="onDialog">
			<Member Name="state" Type="bool" InitialValue="false" />
			<Member Name="reqId" Type="int" InitialValue="0" />
			<Member Name="interrupted" Type="bool" InitialValue="false" />
		</Type>
		<Type Name="onSequenceTypeAvailable">
			<Member Name="name" Type="enum:sequenceType" />
		</Type>
	</Type>


	<Type Name="dialog">
		<Type Name="status">
			<Member Name="dlgWithoutAnimations" Type="bool" InitialValue="false" />
			<Member Name="dlgRequest" Type="dialogModule:onDialogRequest" />
		</Type>
		<Type Name="requestDone">
			<Member Name="reqId" Type="int" InitialValue="0" />
		</Type>
		<Type Name="parameters">
			<Member Name="defaultAnimState" Type="enum:animationOverride" InitialValue="$enum:animationOverride.noOverride" />
			<Member Name="animFragment" Type="string" />
			<Member Name="animTag" Type="string" />
			<Member Name="turnBody" Type="bool" InitialValue="true" />
			<Member Name="noInterrupt" Type="bool" InitialValue="false" />
			<Member Name="useTwinsAsReceiver" Type="bool" InitialValue="true" />
			<Member Name="interruptSleepingOverride" Type="bool" InitialValue="false" />
			<Type Name="initiator">
				<Member Name="chat" Type="bool" InitialValue="false" />
				<Member Name="enableGreeting" Type="bool" InitialValue="true" />
				<Member Name="enableEnding" Type="bool" InitialValue="true" />
				<Member Name="metarole" Type="string" />
				<Member Name="alias" Type="string"/>
				<Member Name="lookAtId" Type="wuid" />
				<Member Name="stopFastTravel" Type="bool" InitialValue="false" />
				<Member Name="useTwinsAsInitiator" Type="bool" InitialValue="true" />
				<Member Name="movePlayer" Type="bool" InitialValue="true" />
				<Member Name="hideNearbyNpcs" Type="bool" InitialValue="true" />
				<Member Name="rotatePlayer" Type="bool" InitialValue="true" />
				<Member Name="putDownCarriedBody" Type="bool" InitialValue="true" />
			</Type>
		</Type>
		<Type Name="monologRequest">
			<Member Name="alias" Type="string"/>
			<Member Name="metarole" Type="string" />
			<Member Name="isDramaticBark" Type="bool" InitialValue="false" />
			<Member Name="forceSubtitles" Type="bool" InitialValue="false" />
			<Member Name="priority" Type="int" InitialValue="0" />
			<Member Name="canBeDelayed" Type="bool" InitialValue="false" />
			<Member Name="sendAnswer" Type="bool" InitialValue="false" />
			<Member Name="overrideContextSuppress" Type="bool" InitialValue="false" />
			<Member Name="lookAtId" Type="wuid" />
			<Member Name="defaultAnimState" Type="enum:animationOverride" InitialValue="$enum:animationOverride.userControlled" />
			<Member Name="contextAsText" Type="string" InitialValue="" />
		</Type>
		<Type Name="chatRequest">
			<Member Name="alias" Type="string"/>
			<Member Name="metarole" Type="string" />
			<Member Name="canBeDelayed" Type="bool" InitialValue="false" />
			<Member Name="lookAtId" Type="wuid" />
			<Member Name="important" Type="bool" InitialValue="false" />
			<Member Name="contextAsText" Type="string" InitialValue="" />
		</Type>
		<Type Name="onComplete">
			<Member Name="state" Type="bool" InitialValue="false" />
		</Type>
		<Type Name="onPrerequest">
			<Member Name="state" Type="bool" InitialValue="true" />
		</Type>

		<Type Name="failed"/>
	</Type>

	<!-- Speech -->
	
	<Type Name="speech">
		<Type Name="switchDialog">
			<Member Name="alias" Type="string" />
			<Member Name="metarole" Type="string" />
			<Member Name="ingameDialogType" Type="enum:speech_ingameDialogType" InitialValue="$enum:speech_ingameDialogType.Bark" />
			<Member Name="repeatAfterSeconds" Type="int" InitialValue="-1" />
			<Member Name="repeatAfterSecondsVariation" Type="int" InitialValue="0" />
			<Member Name="playDialogAnimations" Type="bool" InitialValue="false" />
			<Member Name="maxScheduledPriority" Type="int" InitialValue="-1" />
			<Member Name="context" Type="string" />
			<Member Name="percievingPlayer" Type="bool" InitialValue="false" />
			<Member Name="playerDistance" Type="int" InitialValue="-1" />
			<Member Name="playerInArea" Type="wuid" />
			<Member Name="continuousInitiatorChecks" Type="bool" InitialValue="false"/>
			<Member Name="playerInDialog" Type="bool" />
			<Member Name="initiator" Type="wuid" />
			<Member Name="lookAtEnabled" Type="bool" InitialValue="false"/>
			<Member Name="lookAtId" Type="wuid" InitialValue="null"/>
			<Member Name="boostPerceptionPriority" Type="bool" InitialValue="false"/>
		</Type>
	</Type>


	<Type Name="minigame">
		<Type Name="stop">
			<Member Name="alchemy" Type="bool" InitialValue="true" />
			<Member Name="bookTranscription" Type="bool" InitialValue="true" />
			<Member Name="building" Type="bool" InitialValue="true" />
			<Member Name="dice" Type="bool" InitialValue="true" />
			<Member Name="herbGathering" Type="bool" InitialValue="true" />
			<Member Name="holedigging" Type="bool" InitialValue="true" />
			<Member Name="lockpicking" Type="bool" InitialValue="true" />
			<Member Name="pickpocketing" Type="bool" InitialValue="true" />
			<Member Name="reading" Type="bool" InitialValue="true" />
			<Member Name="sharpening" Type="bool" InitialValue="true" />
		</Type>
		<Type Name="pickpocket">
			<Member Name="event" Type="enum:pickpocketEvent" />
			<Member Name="stolenItemPrice" Type="int" />
		</Type>
	</Type>

	<Type Name="placeBody" />

	<!-- SKALD BS TO MAKE IT RUN-->
	<Type Name="smecka">
		<Member Name="flee" Type="bool"/>
	</Type>

	<Type Name="praceNaVinici">
		<Member Name="weed" Type="int"/>
		<Member Name="sacks" Type="int"/>
	</Type>

	<!-- **********************death*********************** -->

	<Type Name="npcDeathForward">
		<Member Name="npc" Type="wuid" />
	</Type>

	<!--****************************** Companion dog *********************************************-->

	<Type Name="onDogFed">
		<Type Name="subscription">
			<Member Name="_" Type="bool" />
		</Type>
	</Type>

	<Type Name="dog">

		<Type Name="changeRequest">
			<Member Name="newMaster" Type="bool" InitialValue="false" />
			<Member Name="master" Type="wuid" />
			<Member Name="newMode" Type="bool" InitialValue="false" />
			<Member Name="mode" Type="enum:dogCompanionMode" InitialValue="$enum:dogCompanionMode.wait" />
			<Member Name="newBehavior" Type="bool" InitialValue="false" />
			<Member Name="behavior" Type="enum:dogBehavior" />
		</Type>

		<Type Name="internalChangeRequest">
			<Member Name="newMaster" Type="bool" InitialValue="false" />
			<Member Name="master" Type="wuid" />
			<Member Name="newMode" Type="bool" InitialValue="false" />
			<Member Name="mode" Type="enum:dogCompanionMode" InitialValue="$enum:dogCompanionMode.wait" />
			<Member Name="newBehavior" Type="bool" InitialValue="false" />
			<Member Name="behavior" Type="enum:dogBehavior" />
			<Member Name="sender" Type="wuid" />		<!-- sender of changerRequest -->
			<Member Name="init" Type="bool" InitialValue="false" />  <!-- only setup from onInit on dog from initMaster link can set it on TRUE -->
		</Type>

		<Type Name="objectiveChangeRequest">
			<Member Name="objective" Type="enum:dogObjective" />
			<Member Name="priority" Type="enum:dogCompanionPriority" />
			<Member Name="position" Type="vec3" />
			<Member Name="direction" Type="vec3" />
			<Member Name="target" Type="wuid" />
			<Member Name="time" Type="string" />
		</Type>
		
		<Type Name="objectiveChangeRequestSkald">
			<Member Name="objective" Type="enum:dogObjective" />
			<Member Name="priority" Type="enum:dogCompanionPriority" />
			<Member Name="position" Type="vec3" />
			<Member Name="direction" Type="vec3" />
			<Member Name="target" Type="wuid" />
			<Member Name="time" Type="string" />
		</Type>

		<Type name="changeOwner">
			<Member Name="owner" Type="wuid"/>
		</Type>
	</Type>




	<!--****************************** TEST ZBYNEK ***********************************-->
	<Type Name="innerType">
		<Member Name="text" Type="string" />
	</Type>
	<Type Name="firstType">
		<Member Name="inner" Type="innerType" />
		<Member Name="text" Type="string" />
	</Type>
	<Type Name="secondType">
		<Member Name="inner" Type="innerType" />
		<Member Name="text" Type="string" />
		<Member Name="text2" Type="string" />
	</Type>

	<!-- for combat testing -->
	<Type Name="attackTarget">
		<Member Name="target" Type="wuid" />
	</Type>


	<!--****************************** HOLE LISTENER ***********************************-->

	<Type Name="hole">
		<Type Name="digging">
			<!-- 0-start, 1-stop, 2-success -->
			<Member Name="State" Type="int" InitialValue="0" />
		</Type>
	</Type>
	<!--****************************** Load all references ***********************************-->
	<!-- var name: t_loadAllReferences_params-->
	<!-- var type: loadAllReferences:params-->
	<Type Name="loadAllReferences">
		<Type Name="params">
			<Member Name="origin" Type="wuid" />
		</Type>
	</Type>

	<!--****************************** leaveLevel ***********************************-->


	<Type Name="distanceMove_params">
		<Member Name="speed" Type="enum:movementSpeed" InitialValue="$enum:movementSpeed.walk" />
		<Member Name="autospeed" Type="bool" InitialValue="false" />

		<Member Name="exact" Type="bool" InitialValue="false" />
		<Member Name="optional1" Type="bool" />
		<Member Name="distance" Type="float" InitialValue="0.2" />
		<Member Name="variation" Type="float" InitialValue="0.1" />
		<Member Name="successDist" Type="float" InitialValue="5" />
		<Member Name="fixedPosition" Type="bool" InitialValue="false" />

		<Member Name="light_minDistance" Type="float" InitialValue="30.0" />
		<Member Name="checkTC" Type="bool" InitialValue="true" />
		<Member Name="dismountOnArrive" Type="bool" InitialValue="true" />
		<Member Name="movementTargetType" Type="enum:movementTargetType"/>

		<Member Name="forceUseHorse" Type="bool" InitialValue="false" />
		<Member Name="useSituations" Type="bool" InitialValue="true" />
		<Member Name="useGreeting" Type="bool" InitialValue="true" />
		<Member Name="useLight" Type="bool" InitialValue="true" />

		<Member Name="useProgressiveHorseSpeed" Type="bool" InitialValue="true" />
		<!-- enum movementTargetType -->
		<Type Name="wuid">
			<Member Name="target" Type="wuid" />
			<Member Name="outsideAreaOnly" Type="bool" InitialValue="false" />
		</Type>
		<Type Name="vec3">
			<Member Name="target" Type="vec3" />
		</Type>
	</Type>

	<Type Name="leaveLevel_params">
			<Member Name="despawn" Type="bool"  InitialValue=" true " />
			<Member Name="despawnOwnedAndMounedHorse" Type="bool"  InitialValue=" true " />
			<Member Name="distanceMove_params" Type="distanceMove_params:wuid" />

	</Type>

	<!-- / leaveLevel -->


	<!--****************************** weather ***********************************-->

	<Type Name="weatherState">
		<Member Name="rainIntensity" Type="float" InitialValue="0" />
		<Member Name="type" Type="enum:WeatherType" InitialValue="$enum:WeatherType.Normal" />
		<!-- enum WeatherType -->
	</Type>

	<!-- / weather -->


	<!--****************************** DOORS ***********************************-->
	<!--
		Unless someone (like me) forgot to update this comment, following should
		hold true: these types were directly copied from KCD1 type definitions.
		Types close, left, endAnim, onOpenOnClose and params I don't really know
		where they're used, but I've copied them anyway. The rest is used in behaviors
		on doors and in their subbrain.
		In addition, I've also copied lockShopDoors. The former
		is needed when NPCs traverse through doors and the latter is... bound to be
		needed somewhere related to doors as well. I swear I kinda know what I'm doing.
	-->

	<Type Name="door">
		<Type Name="close">
			<Member Name="close" Type="bool" />
		</Type>
		<Type Name="left">
			<Member Name="id" Type="wuid" />
		</Type>
		<Type Name="entry">
			<Member Name="FrontId" Type="int" />
			<Member Name="BackId" Type="int" />
			<Member Name="AnimId" Type="int" />
		</Type>
		<Type Name="player">
			<Member Name="inside" Type="bool" />
		</Type>
		<Type Name="onLock">
			<Member Name="inside" Type="bool" />
		</Type>
		<Type Name="queue">
			<Member Name="id" Type="wuid" />
			<Member Name="key" Type="bool" />
			<Member Name="type" Type="string" />
			<Member Name="inside" Type="bool" /> <!-- rename to: isLeaving (isGoingFromInside) -->
			<Member Name="leaving" Type="bool"  InitialValue="false" />
		</Type>
		<Type Name="info">
			<Member Name="type" Type="string" />
			<Member Name="key" Type="string" />
			<Member Name="reverse" Type="int" />
			<Member Name="right" Type="bool" />
		</Type>
		<Type Name="wait">
			<Member Name="place" Type="int" />
		</Type>
		<Type Name="endAnim">
			<Member Name="done" Type="bool" />
		</Type>
		<Type Name="onOpenOnClose">
			<Member Name="action" Type="string"/>
		</Type>

		<Type Name="params">
			<Member Name="keepOpen" Type="bool" InitialValue="false" />
		</Type>
	</Type>

	<Type Name="lockShopDoors">
		<Type Name="params">
			<Member Name="lock" Type="bool" InitialValue="true" />
			<Member Name="shopArea" Type="wuid" />
		</Type>
	</Type>

	<!-- ladders are kinda doors if you squint your eyes -->
	<Type Name="ladder">
		<Type Name="onRequest"/>
	</Type>

	<!-- (END) DOORS OUT *drops mic* -->

	<!-- roomRental  -->

	<Type Name="playerIsRenting">
		<Member Name="rentStartedTimestamp" Type="int64" />
		<Member Name="infiniteRent" Type="bool" />
	</Type>

	<Type Name="rentRoomCheckIn" >
		<Member Name="untilEndOfTheGame" Type="bool" />
	</Type>

	<Type Name="rentRoomCheckOut" >
		<Member Name="untilEndOfTheGame" Type="bool" />
	</Type>
	
	<!--*************************************** trainingGrounds  ********************************************-->
	
	<Type Name="trainingGroundsFightersInfo" >
		<Member Name="fightersCount" Type="int" />
	</Type>


	<!--*************************************** TOUR  ********************************************-->

	<Type Name="quest">
		<Type Name="tour">
			<Type Name="dialogData">
				<Member Name="alias" Type="string" />
				<Member Name="withPlayer" Type="bool" />
				<Member Name="distance" Type="float" />
				<Member Name="chat" Type="bool" />
			</Type>
		</Type>

		<Type Name="interactorSetActive">
			<Member Name="entity" Type="wuid" />
			<Member Name="isActive" Type="bool" />
		</Type>
	</Type>

	<Type Name="testCheering">
		<Member Name="indexString" Type="string" />
		<Member Name="index" Type="int" />
		<Member Name="target" Type="vec3" />
		<Member Name="targetRaw" Type="vec3" />
		<Member Name="distance" Type="float" />
	</Type>
	<!--********************************** TUTORIAL TYPES  ***************************************-->

	<Type Name="tutorial">

		<Type Name="lockPicking">
			<!-- 0-start, 1-fail, 2-success, 3-stop 4-success after fail (perk) -->
			<Member Name="State" Type="int" InitialValue="0" />
		</Type>

		<Type Name="onLockPickingTolerance">
			<!-- 0-in, 1-out -->
			<Member Name="State" Type="int" InitialValue="0" />
		</Type>

		<Type Name="onOpenedWithKey">
			<Member Name="Item" Type="string"/>
		</Type>
		
		<Type Name="pickpocket_tutorial">
			<Member Name="stage" Type="enum:pickpocket_stage"/>
		</Type>
		
	</Type>

	<!-- /TUTORIAL TYPES -->

	<!--**************************** Quest utils types ************************************-->
	<Type Name="location">
		<Member Name="npc" Type="string"/>
		<Member Name="ctx" Type="string"/>
	</Type>

	<Type Name="trackviewMessage">
		<Member Name="alias" Type="string"/>
		<Member Name="type" Type="string"/>
	</Type>

	
	<Type Name="BattleBloodDecals" />

	<!-- /Quest utils types -->

	<!--****************************** TAVERN TYPES ************************************-->

	<Type Name="customerParams">
		<Member Name="customer" Type="wuid" />
		<Member Name="beer" Type="wuid" />
		<Member Name="soup" Type="wuid" />
		<Member Name="seat" Type="wuid" />
		<Member Name="Position" Type="string" />
	</Type>

	<!--****************************** DICE TABLE TYPES  ***********************************-->
	<Type Name="dice">

        <Type Name="init">
            <Member Name="forceDialog" Type="bool" /> <!-- whether the table should force dialog first (where bet is selected) -->
		</Type>

        <Type Name="initDialogResult">
			<Member Name="opponent" Type="wuid" />
			<Member Name="type" Type="enum:dice_initDialogResultType" />
			<Member Name="gameLevel" Type="enum:dice_gameLevel" />
			<Member Name="isQuest" Type="bool" />
			<Member Name="forceBadgeSubtype" Type="int" InitialValue="-1"/>
	</Type>

		<Type Name="bet">
			<Member Name="type" Type="enum:dice_betType" />
			<Member Name="moneyAmount" Type="int" />
			<Member Name="npcBadge" Type="wuid" />
			<Member Name="playerBadge" Type="wuid" />
	</Type>

		<Type Name="npcTurnSynchronization">
			<Member Name="eventType" Type="enum:dice_npcSychronizationEvent" />
			<Member Name="opponentBark" Type="bool" />
	</Type>

        <Type Name="end">
            <Member Name="reason" Type="enum:dice_minigameResult" />
            <Member Name="player1Score" Type="int" />
            <Member Name="player2Score" Type="int" />
            <Member Name="opponent" Type="wuid" />
            <Member Name="betData" Type="dice:bet" />
        </Type>

    </Type>
	<!-- /DICE TABLE TYPES -->

	<Type name="unconsciousState">
		<Member name="unconscious" type="float" />
		<Member name="reason" type="enum:UnconsciousReason" />
		<Member name="item" type="bool" /> <!-- true if the NPC obtained an item while unconscious -->
	</Type>

	<Type name="shootingTargetHitData">
		<Member name="hitScore" type="int" />
		<Member name="shooter" type="wuid" />
		<Member name="target" type="wuid" />
	</Type>

	<!--****************************** SITUATIONS  ***********************************-->
	<!-- [patrik.papso] TODO: move these types under situation type & fix AI trees -->
	<Type Name="beggarData">
		<Member Name="type" Type="enum:situation_beggarStyle" /> <!-- kneeling/laying -->
		<Member Name="spot" Type="wuid" /> <!-- SmartObject for sync animations  -->
	</Type>

	<Type Name="greeting">
		<Member Name="sender" Type="wuid" />

		<Type Name="synchronizationRequest">
			<Member Name="lock" Type="string" />
		</Type>
		<Type Name="waveRequest">
			<Member Name="lock" Type="string" />
		</Type>
	</Type>

	<Type Name="situation">

		<Type Name="switchGossip">
			<Member Name="area" Type="wuid" />
			<Member Name="initiator" Type="wuid" />
			<Member Name="receiver" Type="wuid" />
		</Type>

		<Type Name="storyteller">
			<Type Name="dialogTrigger" />
			<Type Name="reactionRequest">
				<Member Name="sender" Type="wuid" />
			</Type>
		</Type>

		<Type Name="flutist">
			<Type Name="wantsToPlayRequest">
				<Member Name="sender" Type="wuid" />
			</Type>
			<Type Name="changeStateRequest">
				<Member Name="newState" Type="enum:smartBehaviorState" />
			</Type>
			<Type Name="cooldown">
				<Member Name="timestamp" Type="int64" />
			</Type>
		</Type>
		
	</Type>
	<!--****************************** CALLBACK ***********************************-->

	<Type Name="callback">
		<Member Name="file" Type="string" />		<!-- for IncludeTree -->
		<Member Name="tree" Type="string" />		<!-- for IncludeTree -->
		<Member Name="host" Type="wuid" />	<!-- for CallBehavior -->
		<Member Name="behavior" Type="string" />	<!-- for CallBehavior -->
	</Type>

	<!--************************** CARTS AND CARAVANS *******************************-->

	<Type Name="carts">
		<Type Name="caravanaLeader">
			<Member Name="data" Type="wuid" />
		</Type>

		<Type Name="npcHoppedOnNotification">
			<Member Name="data" Type="wuid" />
		</Type>

		<Type Name="movetoDestination">
			<Member Name="data" Type="wuid" />
		</Type>

		<Type Name="urgentTeleportRequest">
			<Member Name="data" Type="wuid" />
		</Type>

		<Type Name="chatInfo">
			<Member Name="alias" Type="string" />
			<Member Name="includesPlayer" Type="bool" />
			<Member Name="participant_0" Type="wuid" />
			<Member Name="participant_1" Type="wuid" />
			<Member Name="participant_2" Type="wuid" />
			<Member Name="participant_3" Type="wuid" />
			<Member Name="participant_4" Type="wuid" />
		</Type>

		<Type Name="activityData">
			<Member Name="tag" Type="string" />
			<Member Name="duration" Type="string" />
			<Member Name="infiniteWait" Type="bool" InitialValue="false" />
		</Type>
		
		<Type Name="signal">
			<Type Name="onPlayerBoardRequest">
				<Member Name="_" Type="bool" />
			</Type>
		</Type>
		<Type Name="testPositions">
			<Member Name="seat" Type="string" />
			<Member Name="forHorse" Type="bool" InitialValue="false" />
		</Type>
		<Type Name="questChatRequest">
			<Member Name="alias" Type="string" />
		</Type>
		<Type Name="activeUser">
			<Member Name="type" Type="enum:cartUserType" InitialValue="$enum:cartUserType.passenger" />
		</Type>
		<Type Name="codeMessage">
			<Member Name="type" Type="string" />
			<Member Name="target" Type="wuid" />
		</Type>
	</Type>

	<!--****************************** FORMATIONS ***********************************-->

	<Type Name="formation">
		<Type Name="movementTarget">
			<Member Name="position" Type="vec3" />
			<Member Name="rotation" Type="vec3" />
		</Type>
		<Type Name="addMember">
			<Member Name="id" Type="wuid" />
		</Type>
		<Type Name="removeMember">
			<Member Name="id" Type="wuid" />
		</Type>
		<Type Name="movementPath">
			<Member Name="id" Type="wuid" />
			<Member Name="prepare" Type="bool" />
		</Type>
		<Type Name="formationPosition">
			<Member Name="mine" Type="int" />
			<Member Name="total" Type="int" />
		</Type>
	</Type>

	<Type Name="formation_params">
		<Member Name="id" Type="string" />
		<Member Name="destination" Type="wuid" />
	</Type>

	<Type Name="formationData">
		<Member Name="leader" Type="wuid" />
		<Member Name="type" Type="string" />
		<Member Name="preferedPosition" Type="string" />
		<Member Name="policy" Type="enum:formationMode" InitialValue="$enum:formationMode.Relaxed" />
		<Member Name="speedLimit" Type="enum:movementSpeed" InitialValue="$enum:movementSpeed.dash" />
		<Member Name="allowRelocation" Type="bool" InitialValue="false" />
	</Type>

	<Type Name="followFormationParams">
		<Member Name="formation" Type="formationData" />
	</Type>

	<!--****************************** ARCHERY CONTEST ***********************************-->

	<Type Name="archeryContest">
		<Type Name="start">
			<Member Name="type" Type="enum:shootingContest_type" />
			<Member Name="weaponType" Type="enum:shootingContest_weapon" />
			<Member Name="difficulty" Type="enum:shootingContest_difficulty" />
			<Member Name="arrows" Type="int" />
		</Type>

		<Type Name="setupShootingRange">
			<Member Name="playerIsParticipant" Type="bool" />
			<Member Name="requiredNpcParticipants" Type="int" />
		</Type>

		<Type Name="participant">
			<Member Name="participant" Type="wuid" />
			<Member Name="waitForNext" Type="bool" />
		</Type>
		
		<Type Name="referee">
			<Member Name="referee" Type="wuid" />
		</Type>

		<Type Name="refereeCommand">
			<Member Name="command" Type="enum:archeryContest_refereeCommand" />
			<Member Name="numberOfAmmo" Type="int" />
			<Member Name="ammoClass" Type="enum:ammo_class" />
		</Type>

		<Type Name="scoreTable">
			<Member Name="target" Type="wuid" />
			<Member Name="score" Type="int" />
			<Member Name="arrows" Type="int" />
			<Member Name="arrowsInQuiver" Type="int" />
			<Member Name="projectileIndex" Type="int" />
		</Type>

		<Type Name="requestNumberOfTargets" >
		</Type>

		<Type Name="doMonolog">
			<Member Name="command" Type="enum:shootingContest_bark" />
		</Type>

		<Type Name="situation">
			<Member Name="state" Type="enum:shootingContest_situation" />
		</Type>

		<Type Name="dimensionOfTagret">
			<Member Name="center" Type="float" InitialValue="0.15" />
			<Member Name="edge" Type="float" InitialValue="0.3" />
			<Member Name="multiplicator3DTo2D" Type="float" InitialValue="2.08" />
		</Type>

		<Type Name="updateHUD" >
		</Type>

		<Type Name="autotestResult">
			<Member Name="playerWon" Type="bool" />
		</Type>
	</Type>


	<Type Name="horseArcheryContest">
		<Type Name="showHUD">
			<Member Name="player" Type="wuid" />
			<Member Name="opponent" Type="wuid" />
			<Member Name="playerScore" Type="int" />
			<Member Name="opponentScore" Type="int" />
			<Member Name="trackName" Type="string" />
		</Type>	
		<Type Name="updateHUD">
			<Member Name="playerScore" Type="int" />
		</Type>			
		<Type Name="hideHUD" />	
		<Type Name="reactToPlayer" >	
			<Member Name="reactionType" Type="enum:horseArchery_spectatorsReactionType" />
		</Type>
	</Type>
	
	<!--****************************** CLOSED CASLTE ***********************************-->
	
	<Type Name="closedCastle">
        <Type Name="alert">
            <Member Name="sender" Type="wuid" />
        </Type>
	</Type>

	<!--****************************** Lov vlku ***********************************-->
	<Type Name="lovvlku">
		<Type Name="behaviourChangeRequest">
			<Member Name="behaviour" Type="enum:lovVlku_behaviourType" />
			<Member Name="target" Type="wuid" />
		</Type>
	</Type>

	<!--****************************** Zikmund camp openworld ***********************************-->
	
	<Type Name="kzik">
        <Type Name="actionRequest">
			<Member Name="forwarded" Type="bool" InitialValue="false" />
			<Member Name="action" Type="enum:kzik_actionRequest" />
        </Type>
	</Type>
	
	<!--****************************** HORSEHANDLER  ***********************************-->

	<Type Name="horseHandler">
		<Type Name="cleanupAssets">
			<Member Name="sender" Type="wuid" />
		</Type>
	</Type>

	<!-- AI and concept types for wuid casting @KCD2-53699 -->
	<Type Name="cast">
		<Type Name="wuid_linkableObject">
			<Member Name="value" Type="wuid" ConceptWuidType="LinkableObject" />
		</Type>
		<Type Name="wuid_soul">
			<Member Name="value" Type="wuid" ConceptWuidType="Soul" />
		</Type>
		<Type Name="wuid_smartEntity">
			<Member Name="value" Type="wuid" ConceptWuidType="SmartEntity" />
		</Type>
		<Type Name="wuid_smartArea">
			<Member Name="value" Type="wuid" ConceptWuidType="SmartArea" />
		</Type>
		<Type Name="wuid_smartObject">
			<Member Name="value" Type="wuid" ConceptWuidType="SmartObject" />
		</Type>
		<Type Name="wuid_triggerArea">
			<Member Name="value" Type="wuid" ConceptWuidType="TriggerArea" />
		</Type>
		<Type Name="wuid_areaUnion">
			<Member Name="value" Type="wuid" ConceptWuidType="AreaUnion" />
		</Type>
		<Type Name="wuid_iArea">
			<Member Name="value" Type="wuid" ConceptWuidType="IArea" />
		</Type>
		<Type Name="wuid_item">
			<Member Name="value" Type="wuid" ConceptWuidType="Item" />
		</Type>
	</Type>

	<!--****************************** Quest  ***********************************-->
	<Type Name="prepadeni">
		<Type Name="bark">
			<Member Name="alias" Type="string" />
		</Type>
	</Type>

	<Type Name="clearItems">
		<Member Name="itemGuid" Type="string" />
		<Member Name="itemType" Type="string" />
	</Type>

	<Type Name="dogpack">
		<Member Name="member" Type="wuid" />
		<Member Name="action" Type="string" />
	</Type>	

	<Type Name="pogrom">
		<Type Name="joinSkirmish">
			<Member Name="target" Type="wuid" />
		</Type>
	</Type>

	<Type Name="eliciting">
		<Type Name="crowdCheck_impulse" >
			<Member Name="impulse" Type="string" />
		</Type>
	</Type>


</Types>
</database>
